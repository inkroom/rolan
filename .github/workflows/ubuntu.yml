name: CMake

on:
  push:
    tags:
    - '*' 
  # workflow_dispatch:
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  linux:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.9.9
        cached: 'false'
    - name: ubuntu install GL library
      run: sudo apt-get install -y libglew-dev libglfw3-dev wget g++
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      # Build your program with the given configuration
      run: cmake -S . -B build-out && cmake --build build-out && tree
    - name: Tar
      run: tar -czvf rolan.tar.gz build-out
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "rolan.tar.gz"
  windows:
    # 运行平台， windows-latest目前是windows server 2019
    runs-on: windows-latest
    # 步骤
    steps:
      # 安装Qt
      - name: Install Qt
        # 使用外部action。这个action专门用来安装Qt
        uses: jurplel/install-qt-action@v2
        with:
          # Version of Qt to install
          version: 5.9.8
          # Target platform for build
          target: desktop
          # Architecture for Windows/Android
          arch: win32_mingw53
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
          version: 5.3.0
      # 拉取代码
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      # 编译msvc
      - name: build-msvc
        shell: cmd
        env:
          vc_arch: win32_mingw53
          QT_DIR: ${{ env.Qt5_Dir }}
          QT_VERSION: ${{ env.QT_VERSION }}
        run: |
          env
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          cmake -S . -B build-out && cmake --build build-out && tree